@using VidsNet.DataModels;
@using VidsNet.Enums;
@model VidsNet.ViewModels.BaseViewModel
<!html5>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="stylesheet" href="/public/stylesheets/style.css">
    <link rel="stylesheet" href="/public/stylesheets/bootstrap.min.css">
    <link rel="stylesheet" href="/public/stylesheets/bootstrap-theme.min.css">

    <script src="/public/javascripts/jquery-2.2.4.min.js"></script>
    <script src="/public/javascripts/bootstrap.min.js"></script>
    <script src="/public/javascripts/helpers.js"></script>
    <script src="/public/javascripts/items.js"></script>
    <script src="/public/javascripts/settings.js"></script>
    <script src="/public/javascripts/scripts.js"></script>
    <title>VidsNet // @Model.PageTitle </title>
</head>
<body>
    <div class="modal fade" id="popup" tabindex="-1" role="dialog" aria-labelledby="popup" aria-hidden="true" >
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true"> &times;</span>
                    </button>
                    <h4 class="modal-title" id="popupTitle">Empty Modal</h4>
                </div>
                <div class="modal-body" id="popupBody">
                    <p>Enter text here.</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Close</button>
                    <button class="btn btn-primary" type="button" data-dismiss="modal" id="popupSave">Save changes</button>
                </div>
            </div>
        </div>
    </div>
    
    
    <nav class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                @if(@Model.LoggedIn) {
                    <button class="navbar-toggle collapsed" type="button" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                }
                <a class="navbar-brand" href="/">VidsNet</a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
                    @if(Model.LoggedIn) {
                    <ul class="nav navbar-nav">
                        @foreach(MenuItem item in @Model.MenuItems) {
                            var hide = string.Empty;
                            if(item.ItemType == LinkType.Desktop) {
                                hide = "hidden-xs hidden-sm hidden-md";
                            }
                            else if(item.ItemType == LinkType.Mobile) {
                                hide = "hidden-lg hidden-xl";
                            }
                            if(@item.Name == @Model.ActiveMenuItem) {
                                <li class="active">
                                    @if(!string.IsNullOrWhiteSpace(@item.Html)) {
                                        <a href="#" class="btn btn-link @hide" onclick="@item.OnClick">@Html.Raw(@item.Html)</a>   
                                    }
                                    else {
                                        <a href="#" class="btn btn-link @hide" onclick="@item.OnClick">@item.Name</a>
                                    }
                                    
                                </li>
                            }
                            else {
                                <li>
                                    @if(!string.IsNullOrWhiteSpace(@item.Html)) {
                                        <a href="@item.Url" class="btn btn-link @hide" onclick="@item.OnClick">@Html.Raw(@item.Html)</a>
                                    }
                                    else {
                                        <a href="@item.Url" class="btn btn-link @hide" onclick="@item.OnClick">@item.Name</a>
                                    } 
                                </li>
                            }                                
                        }
                    </ul>
                }
            
                
            </div>
        </div>
    </nav>
    <div class="container-fluid col-xs-12 col-sm-12 col-md-10 col-lg-8 col-xl-4 contentBox">
        <div id="contentBox">
            @RenderBody()
        </div>
    </div>
</body>
</html>